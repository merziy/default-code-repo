{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('Could not fetch data for that resource.');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('Fetch aborted.');\n        } else {\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n    }, 5);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"kbGVbgObkPRWJGb0cHAEJjKTGv4=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/alexandermathis/Documents/code/Coding-exercises/React/sample-react-blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACV,GAAD,EAAM;AAAEW,QAAAA,MAAM,EAAEJ,SAAS,CAACI;AAApB,OAAN,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACT,YAAI,CAACA,GAAG,CAACC,EAAT,EACA;AACI,gBAAMC,KAAK,CAAC,yCAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAPD,EAQCJ,IARD,CAQOX,IAAD,IAAU;AACZC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAZD,EAaCW,KAbD,CAaQC,GAAD,IAAS;AACZ,YAAGA,GAAG,CAACC,IAAJ,KAAW,YAAd,EAA4B;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,SAFD,MAGK;AACDf,UAAAA,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR;AACAlB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,OArBD;AAsBH,KAvBS,EAuBP,CAvBO,CAAV;AAyBA,WAAO,MAAMG,SAAS,CAACgB,KAAV,EAAb;AACH,GA7BQ,EA6BP,CAACvB,GAAD,CA7BO,CAAT;AA+BA,SAAO;AAACC,IAAAA,IAAD;AAAOE,IAAAA,SAAP;AAAkBE,IAAAA;AAAlB,GAAP;AACH,CArCD;;GAAMN,Q;;AAuCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState([]);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            fetch(url, { signal: abortCont.signal })\n            .then(res => {\n                if (!res.ok)\n                {\n                    throw Error('Could not fetch data for that resource.');\n                }\n                return res.json();\n            })\n            .then((data) => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch((err) => {\n                if(err.name==='AbortError') {\n                    console.log('Fetch aborted.');\n                }\n                else {\n                    setError(err.message);\n                    setIsPending(false);\n                }\n            })\n        }, 5);\n\n        return () => abortCont.abort();\n    },[url]);\n\n    return {data, isPending, error};\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}